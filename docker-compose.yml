version: '3.7'
services:
  data-generator:
    image: datagen
    build: ./data-generator
    container_name: data-generator
    depends_on:
      redpanda: { condition: service_healthy }
  
  redpanda:
    command:
      - redpanda start
      - --overprovisioned
      - --smp 1
      - --memory 1G
      - --reserve-memory 0M
      - --node-id 0
      - --check=false
      - --kafka-addr 0.0.0.0:9092
      - --advertise-kafka-addr redpanda:9092
      - --pandaproxy-addr 0.0.0.0:8082
      - --advertise-pandaproxy-addr redpanda:8082
      - --set redpanda.enable_transactions=true
      - --set redpanda.enable_idempotence=true
      - --set redpanda.auto_create_topics_enabled=true
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      - --mode dev-container
      - --default-log-level=debug
    image: docker.redpanda.com/redpandadata/redpanda:v23.1.11
    container_name: redpanda
    ports:
      - 9092:9092
      - 8081:8081
      - 8082:8082
    healthcheck: { test: curl -f localhost:9644/v1/status/ready, interval: 1s, start_period: 30s }

  console:
    container_name: redpanda-console
    image: docker.redpanda.com/redpandadata/console:v2.2.4
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
    ports:
      - 8080:8080
    depends_on:
      - redpanda

  materialized:
    image: materialize/materialized:v0.26.0
    container_name: materialized
    command: -w1
    ports:
      - 6875:6875
  
  mzcli:
    image: materialize/cli
    container_name: mzcli
    stdin_open: true
    tty: true
    depends_on:
      - materialized
  
  dbt:
    image: dbt-materialize:v1.1.1
    build: ./dbt
    container_name: dbt
    working_dir: /usr/app/dbt
    init: true
    ports:
      - 8000:8080
    volumes:
      - ./dbt/profiles.yml:/root/.dbt/profiles.yml
      - ./dbt/:/usr/app/dbt
    entrypoint: /usr/app/dbt/entrypoint.sh
    stdin_open: true
    tty: true
    depends_on:
      - materialized

  streamlit:
    image: streamlit
    build: ./app
    container_name: streamlit
    ports:
      - 8501:8501
    volumes:
      - ./app/:/usr/app/streamlit
    depends_on:
      - materialized
      - dbt